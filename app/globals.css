@import 'tailwindcss';

@custom-variant dark (&:is(.dark *));

@theme {
  /* Modern breakpoints for Tailwind CSS 4 using REMs */
  --breakpoint-sm: 40rem;    /* 640px */
  --breakpoint-md: 48rem;    /* 768px */
  --breakpoint-lg: 64rem;    /* 1024px */
  --breakpoint-xl: 80rem;    /* 1280px */
  --breakpoint-2xl: 96rem;   /* 1536px */

  --text-2: 2rem;
  --text-3: 3rem;
  --text-5: 5rem;
  --text-15: 1.5rem;
  --text-25: 2.5rem;
  --text-45: 4.5rem;
  --text-125: 1.25rem;
  --text-375: 3.75rem;
  --text-1125: 1.125rem;

  --color-border: hsl(var(--border));
  --color-input: hsl(var(--input));
  --color-ring: hsl(var(--ring));
  --color-background: hsl(var(--background));
  --color-foreground: hsl(var(--foreground));

  --color-primary: hsl(var(--primary));
  --color-primary-foreground: hsl(var(--primary-foreground));

  --color-secondary: hsl(var(--secondary));
  --color-secondary-foreground: hsl(var(--secondary-foreground));

  --color-destructive: hsl(var(--destructive));
  --color-destructive-foreground: hsl(var(--destructive-foreground));

  --color-muted: hsl(var(--muted));
  --color-muted-foreground: hsl(var(--muted-foreground));

  --color-accent: hsl(var(--accent));
  --color-accent-foreground: hsl(var(--accent-foreground));

  --color-popover: hsl(var(--popover));
  --color-popover-foreground: hsl(var(--popover-foreground));

  --color-card: hsl(var(--card));
  --color-card-foreground: hsl(var(--card-foreground));

  --radius-lg: var(--radius);
  --radius-md: calc(var(--radius) - 2px);
  --radius-sm: calc(var(--radius) - 4px);

  --font-sans: var(--font-inter);

  --animate-accordion-down: accordion-down 0.2s ease-out;
  --animate-accordion-up: accordion-up 0.2s ease-out;
  --animate-border: border 4s ease infinite;

  @keyframes accordion-down {
    from {
      height: 0;
    }
    to {
      height: var(--radix-accordion-content-height);
    }
  }
  @keyframes accordion-up {
    from {
      height: var(--radix-accordion-content-height);
    }
    to {
      height: 0;
    }
  }
  @keyframes border {
    0%,
    100% {
      background-position: 0% 50%;
    }
    50% {
      background-position: 100% 50%;
    }
  }
}

/* Tailwind CSS 4 container style using @container queries */
@utility container {
  margin-inline: auto;
  padding-inline: 2rem;
  
  /* Use proper width media queries with REM values */
  @media (width >= 40rem) {
    max-width: 40rem;  /* sm: 640px */
  }
  @media (width >= 48rem) {
    max-width: 48rem;  /* md: 768px */
  }
  @media (width >= 64rem) {
    max-width: 64rem;  /* lg: 1024px */
  }
  @media (width >= 80rem) {
    max-width: 80rem;  /* xl: 1280px */
  }
  @media (width >= 96rem) {
    max-width: 87.5rem; /* 2xl: 1400px */
  }
}

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }
}

@utility portfolio-image {
  @apply transition-all duration-700 ease-in-out;

  .portfolio-image-container:hover & {
    @apply scale-105;
  }
}
@utility portfolio-image-container {
  &:hover .portfolio-image {
    @apply scale-105;
  }
}

@layer base {
  :root {
    /* Theme colors */
    --background: 0 0% 100%;
    --foreground: 240 10% 3.9%;
    --card: 0 0% 100%;
    --card-foreground: 240 10% 3.9%;
    --popover: 0 0% 100%;
    --popover-foreground: 240 10% 3.9%;
    --primary: 240 5.9% 10%;
    --primary-foreground: 0 0% 98%;
    --secondary: 240 4.8% 95.9%;
    --secondary-foreground: 240 5.9% 10%;
    --muted: 240 4.8% 95.9%;
    --muted-foreground: 240 3.8% 46.1%;
    --accent: 240 4.8% 95.9%;
    --accent-foreground: 240 5.9% 10%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 98%;
    --border: 240 5.9% 90%;
    --input: 240 5.9% 90%;
    --ring: 240 5.9% 10%;
    --radius: 0.5rem;
    
    /* Standardized spacing */
    --header-height: 4rem; /* 64px */
    --spacing-xs: 0.75rem; /* 12px */
    --spacing-sm: 1.5rem;  /* 24px */
    --spacing-md: 2rem;    /* 32px */
    --spacing-lg: 3rem;    /* 48px */
    --spacing-xl: 4rem;    /* 64px */
    --spacing-2xl: 6rem;   /* 96px */
    --spacing-3xl: 8rem;   /* 128px */
    
    /* Section spacing - consistent across site */
    --section-spacing-sm: var(--spacing-xl);  /* 4rem/64px */
    --section-spacing: var(--spacing-2xl);    /* 6rem/96px */
    --section-spacing-lg: var(--spacing-3xl); /* 8rem/128px */
    
    /* Content spacing - for inner elements */
    --content-gap-xs: var(--spacing-xs); /* 0.75rem/12px */
    --content-gap-sm: var(--spacing-sm); /* 1.5rem/24px */
    --content-gap: var(--spacing-md);    /* 2rem/32px */
    --content-gap-lg: var(--spacing-lg); /* 3rem/48px */
  }

  .dark {
    --background: 240 10% 3.9%;
    --foreground: 0 0% 98%;
    --card: 240 10% 3.9%;
    --card-foreground: 0 0% 98%;
    --popover: 240 10% 3.9%;
    --popover-foreground: 0 0% 98%;
    --primary: 0 0% 98%;
    --primary-foreground: 240 5.9% 10%;
    --secondary: 240 3.7% 15.9%;
    --secondary-foreground: 0 0% 98%;
    --muted: 240 3.7% 15.9%;
    --muted-foreground: 240 5% 64.9%;
    --accent: 240 3.7% 15.9%;
    --accent-foreground: 0 0% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% 98%;
    --border: 240 3.7% 15.9%;
    --input: 240 3.7% 15.9%;
    --ring: 240 4.9% 83.9%;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
    transition: background-color 0.3s ease, color 0.3s ease;
  }
}

@layer utilities {
  /* Custom REM-based text size utilities with smaller sizes */
  .text-1rem {
    font-size: 1rem;
  }
  .text-1125rem {
    font-size: 1.125rem;
  } /* 18px */
  .text-125rem {
    font-size: 1.25rem;
  } /* 20px */
  .text-15rem {
    font-size: 1.375rem;
  } /* 22px - reduced from 24px */
  .text-2rem {
    font-size: 1.75rem;
  } /* 28px - reduced from 32px */
  .text-25rem {
    font-size: 2rem;
  } /* 32px - reduced from 40px */
  .text-3rem {
    font-size: 2.5rem;
  } /* 40px - reduced from 48px */
  .text-375rem {
    font-size: 3rem;
  } /* 48px - reduced from 60px */
  .text-45rem {
    font-size: 3.5rem;
  } /* 56px - reduced from 72px */
  .text-5rem {
    font-size: 4rem;
  } /* 64px - reduced from 80px */

  .gradient-text {
    background: linear-gradient(to right, #4ecdc4, #2cb5e8);
    -webkit-background-clip: text;
    background-clip: text;
    -webkit-text-fill-color: transparent;
  }

  .day-gradient-text {
    @apply bg-clip-text text-transparent bg-linear-to-r from-yellow-300 to-yellow-500;
  }

  .night-gradient-text {
    @apply bg-clip-text text-transparent bg-linear-to-r from-blue-800 to-blue-900;
  }

  .divider {
    @apply h-px bg-linear-to-r from-transparent via-border/70 to-transparent;
  }

  .dark .divider {
    background: linear-gradient(
      90deg,
      rgba(0, 0, 0, 0),
      rgba(255, 255, 255, 0.1),
      rgba(0, 0, 0, 0)
    );
  }

  /* Grid Pattern Background */
  .bg-grid-pattern {
    background-size: 40px 40px;
    background-image: 
      linear-gradient(to right, rgba(255, 255, 255, 0.05) 1px, transparent 1px),
      linear-gradient(to bottom, rgba(255, 255, 255, 0.05) 1px, transparent 1px);
  }
  
  /* Lightning Flash Animation */
  @keyframes lightning-flash {
    0% {
      opacity: 0;
      filter: blur(0px);
    }
    5% {
      opacity: 0.2;
      filter: blur(0px);
    }
    10% {
      opacity: 0.1;
      filter: blur(1px);
    }
    15% {
      opacity: 0.8;
      filter: blur(0px);
    }
    20% {
      opacity: 0.1;
      filter: blur(1px);
    }
    30% {
      opacity: 0.2;
      filter: blur(0px);
    }
    50% {
      opacity: 1;
      filter: blur(0px);
    }
    100% {
      opacity: 0;
      filter: blur(1px);
    }
  }
  
  .lightning {
    animation: lightning-flash 5s infinite;
    animation-delay: calc(var(--lightning-delay, 0) * 1s);
    filter: drop-shadow(0 0 10px rgba(255, 255, 255, 0.5));
  }

  /* Portfolio image hover effect */
}

.border-magic-button-inner {
  background: rgba(0, 0, 0, 0.5);
  color: white;
  padding: 0.75rem 2rem;
  border-radius: 9999px;
  font-weight: 500;
  font-size: 1.1rem;
  position: relative;
  overflow: hidden;
  display: inline-flex;
  align-items: center;
}

.border-magic-button-inner::before {
  content: '';
  position: absolute;
  inset: -2px;
  z-index: -1;
  background: rgba(0, 0, 0, 0.5);
  border-radius: 9999px;
  filter: blur(2px);
}

.border-magic-button-inner::after {
  content: 'â†’';
  margin-left: 8px;
  transition: transform 0.2s ease;
}

.border-magic-button-inner:hover::after {
  transform: translateX(4px);
}

/* Special styling for the portfolio link */
.border-magic-link {
  color: white !important;
}

@keyframes shooting-star {
  0% {
    transform: translateX(0) translateY(0);
    opacity: 1;
  }
  70% {
    opacity: 1;
  }
  100% {
    transform: translateX(var(--translateX, -400px)) translateY(var(--translateY, -300px));
    opacity: 0;
  }
}

@keyframes twinkling {
  0% {
    opacity: 0.2;
  }
  50% {
    opacity: 0.8;
  }
  100% {
    opacity: 0.2;
  }
}

/* Standard section spacing classes */
.py-section-y-sm {
  padding-top: var(--section-spacing-sm);
  padding-bottom: var(--section-spacing-sm);
}

.py-section-y {
  padding-top: var(--section-spacing);
  padding-bottom: var(--section-spacing);
}

.py-section-y-lg {
  padding-top: var(--section-spacing-lg);
  padding-bottom: var(--section-spacing-lg);
}

/* Content gap spacing classes */
.gap-content-gap-sm {
  gap: var(--content-gap-sm);
}

.gap-content-gap {
  gap: var(--content-gap);
}

.gap-content-gap-lg {
  gap: var(--content-gap-lg);
}

.divider {
  @apply h-px bg-linear-to-r from-transparent via-border/70 to-transparent;
}

/* Section heading spacing */
.section-heading {
  margin-bottom: var(--content-gap-lg);
}

.section-subheading {
  margin-bottom: var(--content-gap);
}

/* Sun and Moon icon animations */
.sun {
  animation: spin 40s linear infinite;
  filter: drop-shadow(0 0 4px rgba(250, 204, 21, 0.7));
}

.moon {
  animation: glow 3s ease-in-out infinite alternate;
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

@keyframes glow {
  0% {
    filter: drop-shadow(0 0 2px rgba(30, 64, 175, 0.5));
  }
  100% {
    filter: drop-shadow(0 0 10px rgba(30, 64, 175, 0.8));
  }
}

